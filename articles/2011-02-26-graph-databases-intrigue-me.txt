--- 
title: Graph Databases Intrigue Me
date: 26/02/2011

Last night I went to the <a href="http://sunlightfoundation.com/">Sunlight Foundation</a> for a semantic web meet-up.  The night's topic was linked data and a demo was given by <a href="http://www.twitter.com/Skud">Kirrily Robert</a> of <a href="http://freebase.com/">Freebase</a> on Freebase's platform.~

If you haven't started hearing about semantic web or linked data initiatives, hop on board, it is really cool.  I have the fortunate opportunity to introduce some of these ideas in the work place; and therefore get to check out the underlying technologies.  In no particular order here are some terms that I have been increasingly familiar with over the past year: RDF, RDFa, OWL, Ontologies, Taxonomies, Entity Extraction, NLP, Auto-categorization, Concept Mapping, Graph Databases, SPARQL, and the list goes on.  I'm finally getting a coherent mental model of how these all tie together.

At this very moment, I am in the middle of reading 10 different articles/white papers/blogs about graph databases; they are cool.  Up until last night I had only heard of graph databases in passing while researching the various NoSQL key-value stores.  The cool thing(s) about graph databases are they are schema-less, dynamic, represent data and relationships inherently via linking, and can more easily represent real world information models.  The catch phrase associated with graph databases (more specifically Freebase's graphd) is that they are "schema last", or in other words, a user defined schema is applied via a graph query language which then traverses the linked relationships and returns whatever matches.  The not so cool things are performance trade-offs, and an obtuse and confusing looking query language in SPARQL (Freebase's MQL is much nicer syntactically), however the ability to query this way is tremendously powerful and flexible.

I'm losing my train of thought, but if you're interested at all in graph databases, check out <a href="http://neo4j.org">neo4j</a>, this <a href="http://www.infoq.com/articles/graph-nosql-neo4j">infoq article</a>, and this compare/contrast on <a href="http://stackoverflow.com/questions/1189911/non-relational-database-design">stackoverflow</a>.  This will get you on the right track to learning potential applications graph databases would be best suited for.

  Going forward more and more linked data will begin to creep into our lives, especially since Freebase was acquired by Google.  In the other corner, you have Apple's acquisition of <a href="http://semanticweb.com/what-does-siris-acquisition-by-apple-mean-and-where-might-sri-innovations-next-lead_b598">Siri</a>.  It will be interesting to see how these two initiatives towards a more linked web will play out; the former contender champions open data and a view source mentality, the latter... well we all know about the walled iGarden and everything that goes along with that.


